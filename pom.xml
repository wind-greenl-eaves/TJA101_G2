<?xml version="1.0" encoding="UTF-8"?>
<!-- Maven pom.xml 檔案的根元素，定義了專案物件模型 (Project Object Model) -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- POM 模型的版本，對於 Maven 2 和 3 來說，固定為 4.0.0 -->
	<modelVersion>4.0.0</modelVersion>

	<!-- 父專案設定：繼承自 spring-boot-starter-parent -->
	<!-- 優點：統一管理依賴項版本，無需為每個 Spring Boot 相關依賴手動指定版本號 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath /> <!-- 表示從 Maven 中央倉庫查找父專案，而非本地路徑 -->
	</parent>

	<!-- 專案座標 (Maven Coordinates)：用來唯一識別此專案 -->
	<groupId>demo</groupId> <!-- 專案所屬組織的唯一標識符，通常是反向的公司網域名稱 -->
	<artifactId>demo</artifactId> <!-- 專案的唯一名稱 -->
	<version>0.0.1-SNAPSHOT</version> <!-- 專案版本號，SNAPSHOT 代表正在開發中的快照版本 -->
	<packaging>war</packaging> <!-- 專案打包方式。'war' 表示會打包成 Web Application Archive，用於部署到 Servlet 容器 (如 Tomcat) -->
	<name>demo</name> <!-- 專案的顯示名稱 -->
	<description>demo</description> <!-- 專案的描述 -->

	<!-- 屬性設定：集中管理專案中使用的變數 -->
	<properties>
		<java.version>17</java.version> <!-- 指定專案使用的 Java 版本 -->
		<hibernate-validator.version>8.0.1.Final</hibernate-validator.version> <!-- 自定義 Hibernate Validator 的版本 -->
	</properties>

	<!-- 依賴項管理：定義專案所需的外部函式庫 -->
	<dependencies>

		<!-- =============================================================== -->
		<!-- Spring Boot 核心 Starters                                       -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- 資料持久層 (Data Persistence)                                     -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- 視圖層 (View Layer) - Thymeleaf & JSP                           -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- JSON 序列化 (Serialization)                                     -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate6</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- 驗證 (Validation)                                               -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>

		<!-- =============================================================== -->
		<!-- 日誌 (Logging) - Log4j2                                         -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- Web - Servlet, WebSocket & EL                                   -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.websocket</groupId>
			<artifactId>jakarta.websocket-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>jakarta.el</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- =============================================================== -->
		<!-- 前端資源 (WebJars)                                              -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>4.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>popper.js</artifactId>
			<version>1.14.3</version>
		</dependency>

		<!-- =============================================================== -->
		<!-- 開發工具 & 其他工具                                               -->
		<!-- =============================================================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- =============================================================== -->
		<!-- 測試 (Testing)                                                  -->
		<!-- =============================================================== -->
		<!-- 提供測試框架，包含 JUnit 5, Mockito, Spring Test 等 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!-- 建構設定 -->
	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin：用於打包和執行 Spring Boot 應用程式 -->
			<!-- 主要功能：1. 建立可執行的 JAR/WAR 檔。 2. 透過 'spring-boot:run' 指令運行應用程式。 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
